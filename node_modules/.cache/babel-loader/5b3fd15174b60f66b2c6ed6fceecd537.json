{"ast":null,"code":"var _jsxFileName = \"/home/sajal/ReactApp/user-form-react-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const nameInputRef = useRef();\n  const [isEnterNameValid, setIsEnteredName] = useState(false);\n  const [isEnterNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputIsInvalid = !isEnterNameValid && isEnterNameTouched;\n  useEffect(() => {\n    if (isEnterNameValid) {\n      console.log(\"Input is valid\");\n    }\n  }, [isEnterNameValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName === \"\") {\n      setIsEnteredName(false);\n      return;\n    }\n\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  };\n\n  const nameInputClasses = isEnterNameValid ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), isEnterNameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \" Field must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"aAksBVt/+2bnJv8m/Fz+ZTItGlo=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/sajal/ReactApp/user-form-react-project/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","enteredName","setEnteredName","nameInputRef","isEnterNameValid","setIsEnteredName","isEnterNameTouched","setEnteredNameTouched","nameInputIsInvalid","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","enteredValue","current","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMM,YAAY,GAAGP,MAAM,EAA3B;AACA,QAAM,CAACQ,gBAAD,EAAmBC,gBAAnB,IAAuCR,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAMW,kBAAkB,GAAG,CAACJ,gBAAD,IAAqBE,kBAAhD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,gBAAJ,EAAsB;AACpBK,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GAJQ,EAIN,CAACN,gBAAD,CAJM,CAAT;;AAKA,QAAMO,sBAAsB,GAAIC,KAAD,IAAW;AACxCV,IAAAA,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAIH,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACI,cAAN;AACAT,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAIN,WAAW,KAAK,EAApB,EAAwB;AACtBI,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACA,UAAMgB,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBJ,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACD,GAXD;;AAYA,QAAME,gBAAgB,GAAGf,gBAAgB,GACrC,sBADqC,GAErC,eAFJ;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAEW,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEhB,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAEQ;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGP,gBAAgB,iBACf;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjDD;;GAAML,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const nameInputRef = useRef();\n  const [isEnterNameValid, setIsEnteredName] = useState(false);\n  const [isEnterNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputIsInvalid = !isEnterNameValid && isEnterNameTouched;\n\n  useEffect(() => {\n    if (isEnterNameValid) {\n      console.log(\"Input is valid\");\n    }\n  }, [isEnterNameValid]);\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName === \"\") {\n      setIsEnteredName(false);\n      return;\n    }\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  };\n  const nameInputClasses = isEnterNameValid\n    ? \"form-control invalid\"\n    : \"form-control \";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n        />\n        {isEnterNameValid && (\n          <p className=\"error-text\"> Field must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}